@define-mixin animation ($delay, $duration, $animation) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-fill-mode: forwards;

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-fill-mode: forwards;

  -o-animation-delay: $delay;
  -o-animation-duration: $duration;
  -o-animation-name: $animation;
  -o-animation-fill-mode: forwards;

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-fill-mode: forwards
}

@define-mixin background-gradient ($color1, $color2) {
  background: $color1;
  background: -moz-radial-gradient(center bottom, ellipse cover, $color1 0%, $color2 100%, $color1 100%, $color1 100%);
  background: -webkit-gradient(radial, center bottom, 0px, center bottom, 100%, color-stop(0%,$color1), color-stop(100%,$color2), color-stop(100%,$color1), color-stop(100%,$color1));
  background: -webkit-radial-gradient(center bottom, ellipse cover, $color1 0%,$color2 100%,$color1 100%,$color1 100%);
  background: -o-radial-gradient(center bottom, ellipse cover, $color1 0%,$color2 100%,$color1 100%,$color1 100%);
  background: -ms-radial-gradient(center bottom, ellipse cover, $color1 0%,$color2 100%,$color1 100%,$color1 100%);
  background: radial-gradient(ellipse at center bottom, $color1 0%,$color2 100%,$color1 100%,$color1 100%);
}

@define-mixin linearGradient($top, $bottom){
  background: $top;
  background: -moz-linear-gradient(top,  $top 0%, $bottom 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom));
  background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%);
  background: -o-linear-gradient(top,  $top 0%,$bottom 100%);
  background: -ms-linear-gradient(top,  $top 0%,$bottom 100%);
  background: linear-gradient(to bottom,  $top 0%,$bottom 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$top', endColorstr='#000000',GradientType=0 );
}

@define-mixin transition($values...) {
  $transitions: ();
  @each $declaration in $values {
  $prop: nth($declaration, 1);
  $prop-opts: ();
  $length: length($declaration);
    @for $i from 2 through $length {
      $prop-opts: append($prop-opts, nth($declaration, $i));
    }
  $trans: ($prop, $prop-opts);
  $transitions: append($transitions, $trans, comma);
  }

  -webkit-transition: trans-prefix($transitions, webkit);
  -moz-transition: trans-prefix($transitions, moz);
  -o-transition: trans-prefix($transitions, o);
  transition: $values;
}